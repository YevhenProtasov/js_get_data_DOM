{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,I,EAAI,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAiB,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAQzC,EAAkB,AANxB,CAAA,EAAa,EAAW,GAAG,CAAC,SAAC,CAA7B,EAAmC,OAG1B,SAAS,AAHiC,EAAE,SAAS,CAGtC,OAAO,CAAC,KAAM,IAAK,G,E,EAGR,MAAM,CAAC,SAAC,CAAA,CAAI,CAA/C,EAAsD,OAAA,EAAK,C,GAErD,EAAgB,EAAkB,EAAW,MAAM,CAEnD,EAAiB,SAAS,aAAa,CAAC,qBACxC,EAAe,SAAS,aAAa,CAAC,uBAE5C,SAAS,EAA0B,CAAM,EACvC,OAAO,EAAO,cAAc,CAAC,QAC/B,CAEA,EAAe,SAAS,CAAG,EAA0B,GACrD,EAAa,SAAS,CAAG,EAA0B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-console */ \"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar population = _to_consumable_array(document.querySelectorAll(\".population\"));\npopulation = population.map(function(v) {\n    return convertToNumber(v.innerHTML);\n});\nfunction convertToNumber(value) {\n    return parseInt(value.replace(/,/g, \"\"), 10);\n}\nvar totalPopulation = population.reduce(function(v1, v2) {\n    return v1 + v2;\n});\nvar avgPopulation = totalPopulation / population.length;\nvar totalContainer = document.querySelector(\".total-population\");\nvar avgContainer = document.querySelector(\".average-population\");\nfunction formatTheNumberForDisplay(number) {\n    return number.toLocaleString(\"en-US\");\n}\ntotalContainer.innerHTML = formatTheNumberForDisplay(totalPopulation);\navgContainer.innerHTML = formatTheNumberForDisplay(avgPopulation);\n\n//# sourceMappingURL=index.e264d064.js.map\n","/* eslint-disable no-console */\n'use strict';\n\nlet population = [...document.querySelectorAll('.population')];\n\npopulation = population.map((v) => convertToNumber(v.innerHTML));\n\nfunction convertToNumber(value) {\n  return parseInt(value.replace(/,/g, ''), 10);\n}\n\nconst totalPopulation = population.reduce((v1, v2) => v1 + v2);\n\nconst avgPopulation = totalPopulation / population.length;\n\nconst totalContainer = document.querySelector('.total-population');\nconst avgContainer = document.querySelector('.average-population');\n\nfunction formatTheNumberForDisplay(number) {\n  return number.toLocaleString('en-US');\n}\n\ntotalContainer.innerHTML = formatTheNumberForDisplay(totalPopulation);\navgContainer.innerHTML = formatTheNumberForDisplay(avgPopulation);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","population","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","totalPopulation","map","v","parseInt","value","innerHTML","replace","reduce","v1","v2","avgPopulation","totalContainer","querySelector","avgContainer","formatTheNumberForDisplay","number","toLocaleString"],"version":3,"file":"index.e264d064.js.map"}